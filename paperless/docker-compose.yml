version: "3.8"
services:
  frontend:
    image: paperless:nginx
    build:
      dockerfile: ui/Dockerfile
    ports:
      - "8080:80"

  backend:
    image: paperless:openjdk
    build:
      dockerfile: Dockerfile
    ports:
      - "8088:8088"

  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
      POSTGRES_DB: paperless-swkom
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - paperless-data:/var/lib/postgresql/data


  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: paperless
      RABBITMQ_DEFAULT_PASS: paperless
    ports:
      - "5672:5672"  # RabbitMQ server
      - "15672:15672"  # Management console
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  minio:
    image: minio/minio
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: paperless
      MINIO_ROOT_PASSWORD: paperless
    ports:
      - "9000:9000"  # MinIO server
      - "9001:9001"  # MinIO Console
    command: server /data --console-address ":9001"


  tesseract:
    build:
      context: ./tesseract
      dockerfile: Dockerfile
    container_name: paperless-tesseract
    depends_on:
      - minio
      - rabbitmq
    # additional configuration for tesseract (e.g., environment variables, volumes)
    environment:
      - OCR_TESSDATA=/usr/share/tesseract-ocr/4.00/tessdata
    # other configurations like ports, volumes etc., depending on your application needs


volumes:
  paperless-data:
  rabbitmq-data:
  minio-data: