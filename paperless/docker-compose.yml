version: "3.8"
services:
  frontend:
    image: paperless:nginx
    build:
      dockerfile: ui/Dockerfile
    ports:
      - "8080:80"

  backend:
    image: paperless:openjdk
    build:
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - TESSERACT_DATAPATH=/usr/share/tesseract-ocr/4.00/tessdata # Adjust this path as needed

  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
      POSTGRES_DB: paperless-swkom
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - paperless-data:/var/lib/postgresql/data


  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: paperless
      RABBITMQ_DEFAULT_PASS: paperless
    ports:
      - "5672:5672"  # RabbitMQ server
      - "15672:15672"  # Management console
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  minio:
    image: minio/minio
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: paperless
      MINIO_ROOT_PASSWORD: paperless
    ports:
      - "9000:9000"  # MinIO server
      - "9001:9001"  # MinIO Console
    command: server /data --console-address ":9001"

  elasticsearch:
    image: elasticsearch:8.7.1
    container_name: paperless-elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
      - "xpack.security.enrollment.enabled=false"
      - ELASTIC_PASSWORD=paperless
    ports:
      - 9200:9200
      - 9300:9300

  tesseract:
    image: franky1/tesseract
    container_name: paperless-tesseract
    volumes:
      - ocrdata:/ocrdata

volumes:
  paperless-data:
  rabbitmq-data:
  minio-data:
  ocrdata:
